include_guard(GLOBAL)

@PACKAGE_INIT@

set_and_check(MBASE_STD_BIN_DIR "@PACKAGE_MBASE_STD_BIN_INSTALL_DIR@")
set_and_check(MBASE_STD_LIB_DIR "@PACKAGE_MBASE_STD_LIB_INSTALL_DIR@")
set_and_check(MBASE_STD_INCLUDE_DIRS "@PACKAGE_MBASE_STD_INCLUDE_INSTALL_DIR@")

set(MBASE_STD_NAME_DESCRIPTIVE "MBASE @MBASE_STD_LIB_NAME_EXCEPTION@ library @MBASE_STD_VERSION@")

@MBASE_EMBEDDED_FIND_UUID_CMAKE@

add_library(mbase-std INTERFACE)
set(MBASE_STD_FOUND TRUE)

if(APPLE)
    find_package(ICONV)
    list(APPEND MBASE_STD_INCLUDE_DIRS ${Iconv_INCLUDE_DIRS})
    list(APPEND MBASE_STD_LIBRARIES ${Iconv_LIBRARIES})
elseif(UNIX)
    if(NOT UUID_FOUND)
        message(FATAL "Standard library has a dependency on uuid library. On ubuntu, you can install it using 'sudo apt-get install uuid-dev'.")
    endif()
    find_package(Threads REQUIRED)
    list(APPEND MBASE_STD_INCLUDE_DIRS ${UUID_INCLUDE_DIRS})
    list(APPEND MBASE_STD_LIBRARIES ${UUID_LIBRARIES} ${CMAKE_THREAD_LIBS_INIT})
endif()

if(MBASE_STD_LIBRARIES)
    target_link_libraries(mbase-std INTERFACE ${MBASE_STD_LIBRARIES})
    target_include_directories(mbase-std INTERFACE ${MBASE_STD_INCLUDE_DIRS})
endif()
